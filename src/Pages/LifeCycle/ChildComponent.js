import React, { PureComponent } from "react";

// PureComponent gi·ªëng Component tuy nhi√™n PureComponent s·∫Ω x√©t gi√° tr·ªã ƒë·∫ßu v√†o c·ªßa props c√≥ g√¨ thay ƒë·ªïi hay kh√¥ng => n·∫øu c√≥ m·ªõi render l·∫°i
// shouldComponentUpdate kh√¥ng t·ªìn t·∫°i trong PureComponent (v√¨ PureComponent ƒë√£ x·ª≠ l√Ω render t·ª± ƒë·ªông t∆∞∆°ng ƒë∆∞∆°ng v·ªõi lifecycle n√†y)
export default class ChildComponent extends PureComponent {
  constructor(props) {
    super(props);
    this.state = {};
    console.log("constructor in Child");
  }

  static getDerivedStateFromProps(props, state) {
    console.log("getDerivedStateFromProps in Child");
    return state;
  }

  // // ch·∫°y sau khi state || props c·ªßa component thay ƒë·ªïi
  // shouldComponentUpdate(newProps, newState) {
  //   // if (newState.hello) return false;
  //   console.log("shouldComponentUpdate Child");
  //   return true;
  //   // return false;
  // }

  render() {
    console.log("render again Child");
    return (
      <div>Props Child: {this.props.stateNumber.number} Child Component</div>
    );
  }
  componentDidMount() {
    console.log("componentDidMount Child");
    this.i = setInterval(() => {
      console.log("Let's see. ü§î")
    }, 1000)
  }
  componentDidUpdate(prevProps, prevState) {
    // H·∫°n ch·∫ø setStatet trong component n√†y (Mu·ªën setState ph·∫£i c√≥ ƒëi·ªÅu ki·ªán if)
    console.log("componentDidUpdate Child");
  }
  componentWillUnmount() {
    clearInterval(this.i);
  }
}
